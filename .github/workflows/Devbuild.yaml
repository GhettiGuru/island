name: Android CI

env:
  main_project_module: app
  playstore_name: Island

on:
  push:
    branches:
      - 'dev' # Only trigger on 'dev' branch pushes
  pull_request:
    branches:
      - 'dev' # Only trigger on 'dev' branch pull requests
  workflow_dispatch: # Allows manual triggering

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Set environment variables for analytics
        run: echo "DISABLE_ANALYTICS=true" >> $GITHUB_ENV

      - name: Checkout deagle repository (dev branch)
        uses: actions/checkout@v4
        with:
          repository: 'oasisfeng/deagle'
          path: 'deagle'
          ref: 'dev' # Explicitly checkout the 'dev' branch of deagle

      - name: Checkout main app code (dev branch)
        uses: actions/checkout@v4
        with:
          path: 'island' # Checkout the main app into the 'island' folder
          ref: 'dev' # Explicitly checkout the 'dev' branch of the main app repository

      # IMPORTANT: Place Set Up JDK BEFORE any Gradle commands
      - name: Set Up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: 'gradle'

      - name: Set current date as env variable
        run: echo "date_today=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      - name: Set repository name as env variable
        run: echo "repository_name=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_ENV

      # These steps now run *after* Java 17 is set up
      - name: Ensure Gradle wrapper is executable
        run: chmod +x gradlew
        working-directory: island # Execute this command from the 'island' directory

      - name: Verify Gradle wrapper version
        run: ./gradlew --version
        working-directory: island # Execute this command from the 'island' directory

      - name: Run gradle tests (Packaging Flavor)
        run: ./gradlew testPackagingDebug # Or testPackagingRelease, or testPackaging if an aggregate task exists
        working-directory: island # Execute this command from the 'island' directory

      - name: Build gradle project (Packaging Flavor)
        run: ./gradlew buildPackaging # This will build all build types (Debug, Release) for the Packaging flavor
        working-directory: island # Execute this command from the 'island' directory

      - name: Build APK Debug - ${{ env.main_project_module }} (Packaging Flavor)
        run: ./gradlew assemblePackagingDebug -PdisableAnalytics=true
        working-directory: island # Execute this command from the 'island' directory

      - name: Build app with analytics disabled (Release - Packaging Flavor)
        run: ./gradlew assemblePackagingRelease -PdisableAnalytics=true
        working-directory: island # Execute this command from the 'island' directory

      - name: Build App Bundle (AAB) Release - ${{ env.main_project_module }} (Packaging Flavor)
        run: ./gradlew ${{ env.main_project_module }}:bundlePackagingRelease
        working-directory: island # Execute this command from the 'island' directory

      - name: Upload APK Debug Artifact (Packaging Flavor)
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.date_today }} - ${{ env.playstore_name }} - ${{ env.repository_name }} - APK(s) debug generated (Packaging)
          path: island/${{ env.main_project_module }}/build/outputs/apk/packagingDebug/

      - name: Upload APK Release Artifact (Packaging Flavor)
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.date_today }} - ${{ env.playstore_name }} - ${{ env.repository_name }} - APK(s) release generated (Packaging)
          path: island/${{ env.main_project_module }}/build/outputs/apk/packagingRelease/

      - name: Upload AAB (App Bundle) Release Artifact (Packaging Flavor)
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.date_today }} - ${{ env.playstore_name }} - ${{ env.repository_name }} - App bundle(s) AAB release generated (Packaging)
          path: island/${{ env.main_project_module }}/build/outputs/bundle/packagingRelease/
